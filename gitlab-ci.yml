stages:
  - test
  - build
  - deploye

test_nginx:
  image: gitlabregistry.elyas.ir/elyas/nginx_alpine:latest
  stage: test
  tags:
    - test
  only:
    - master
  script:
    - rm -rf /etc/nginx/*
    - cp -r * /etc/nginx/
    - rm -rf /etc/nginx/conf.d
    - mv /etc/nginx/conf.d.docker /etc/nginx/conf.d
    - nginx -t

dind_build:
  image: gitlabregistry.elyas.ir/elyas/dind:latest
  stage: build
  tags:
    - build
  only:
    - master
  services:
    - name: docker:dind
      alias: thedockerhost
  variables:
    DOCKER_HOST: tcp://thedockerhost:2375/
    # Use the overlayfs driver for improved performance:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --cache-from $CI_REGISTRY_IMAGE:latest .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  after_script:
    - docker logout $CI_REGISTRY

deploye:
  stage: deploye
  tags:
    - production
  only:
    - master
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker-compose -f docker-compose.yml down
    - docker-compose -f docker-compose.yml up -d
  after_script:
    - docker logout $CI_REGISTRY

    
